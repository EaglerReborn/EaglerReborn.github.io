(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{294:function(e,o,t){"use strict";t.r(o);var l=t(14),v=Object(l.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"entitydata"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#entitydata"}},[e._v("#")]),e._v(" EntityData")]),e._v(" "),o("p",[e._v("A typical EntityData object will have the following properties:\nAll of the properties of "),o("RouterLink",{attrs:{to:"/guide/plugindocs/globals/EntityData.html"}},[e._v("EntityData")]),e._v(", and:")],1),e._v(" "),o("ul",[o("li",[o("code",[e._v("cameraYaw")]),e._v(": Number: Equal to the player's "),o("code",[e._v("cameraYaw")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("chasingPosX")]),e._v(": Number: Equal to the player's "),o("code",[e._v("chasingPosX")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("chasingPosY")]),e._v(": Number: Equal to the player's "),o("code",[e._v("chasingPosY")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("chasingPosZ")]),e._v(": Number: Equal to the player's "),o("code",[e._v("chasingPosZ")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("experience")]),e._v(": Number: The player's experience number.")]),e._v(" "),o("li",[o("code",[e._v("experienceLevel")]),e._v(": Integer: The player's experience level.")]),e._v(" "),o("li",[o("code",[e._v("experienceTotal")]),e._v(": Integer: The player's experience total.")]),e._v(" "),o("li",[o("code",[e._v("fishEntity")]),e._v(": "),o("RouterLink",{attrs:{to:"/guide/plugindocs/globals/FishHookData.html"}},[e._v("FishHookData")]),e._v(": The player's fishing bobber / hook. (If existing)")],1),e._v(" "),o("li",[o("code",[e._v("flyToggleTimer")]),e._v(": Integer: Equal to the player's "),o("code",[e._v("flyToggleTimer")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("hasReducedDebug")]),e._v(": Boolean: Equal to the player's "),o("code",[e._v("hasReducedDebug")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("itemInUseCount")]),e._v(": Integer: The count of the item that the player is currenly using. (Read-only)")]),e._v(" "),o("li",[o("code",[e._v("lastXPSound")]),e._v(": Integer: Equal to the player's "),o("code",[e._v("lastXPSound")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("sleepTimer")]),e._v(": Integer: Equal to the player's "),o("code",[e._v("sleepTimer")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("sleeping")]),e._v(": Boolean: Whether or not the player is sleeping.")]),e._v(" "),o("li",[o("code",[e._v("spawnForced")]),e._v(": Boolean: Equal to the player's "),o("code",[e._v("spawnForced")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("speedInAir")]),e._v(": Number: Equal to the player's "),o("code",[e._v("speedInAir")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("speedOnGround")]),e._v(": Number: Equal to the player's "),o("code",[e._v("speedOnGround")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("xpCooldown")]),e._v(": Integer: Equal to the player's "),o("code",[e._v("xpCooldown")]),e._v(".")]),e._v(" "),o("li",[o("code",[e._v("xpSeed")]),e._v(": Integer: Equal to the player's "),o("code",[e._v("xpSeed")]),e._v(".")])])])}),[],!1,null,null,null);o.default=v.exports}}]);