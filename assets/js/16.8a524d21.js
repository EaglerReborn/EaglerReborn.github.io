(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{290:function(a,t,e){"use strict";e.r(t);var o=e(14),s=Object(o.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"entitydata"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entitydata"}},[a._v("#")]),a._v(" EntityData")]),a._v(" "),t("p",[a._v("A typical EntityData object will have the following properties:")]),a._v(" "),t("ul",[t("li",[t("code",[a._v("x")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("posX")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("y")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("posY")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("z")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("posZ")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("chunkCoordX")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("chunkCoordX")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("chunkCoordY")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("chunkCoordY")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("chunkCoordZ")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("chunkCoordZ")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("motionX")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("motionX")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("motionY")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("motionY")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("motionZ")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("motionZ")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("yaw")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("rotationYaw")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("pitch")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("rotationPitch")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isInWeb")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isInWeb")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isCollided")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isCollided")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isCollidedVertically")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isCollidedVertically")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isCollidedHorizontally")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isCollidedHorizontally")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("onGround")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("onGround")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("dimension")]),a._v(": Integer: Equal to the entity's "),t("code",[a._v("dimension")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("id")]),a._v(": Integer: Equal to the entity's "),t("code",[a._v("entityId")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("fallDistance")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("fallDistance")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("noClip")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("noClip")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("stepHeight")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("stepHeight")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isDead")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isDead")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("inPortal")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("inPortal")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("inWater")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("inWater")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isAirBorne")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isAirBorne")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("ticksExisted")]),a._v(": Integer: Equal to the entity's "),t("code",[a._v("ticksExisted")]),a._v(". (Read-only)")]),a._v(" "),t("li",[t("code",[a._v("invulnerable")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("invulnerable")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isImmuneToFire")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isImmuneToFire")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("isOutsideBorder")]),a._v(": Boolean: Equal to the entity's "),t("code",[a._v("isOutsideBorder")]),a._v(".")]),a._v(" "),t("li",[t("code",[a._v("entityCollisionReduction")]),a._v(": Number: Equal to the entity's "),t("code",[a._v("entityCollisionReduction")]),a._v(".")])]),a._v(" "),t("p",[a._v("Hello. This doc isn't done. At all. Just understand that almost all of the functions listed here take the same arguments and have the same return type as in the normal "),t("code",[a._v("Entity.java")]),a._v(".\nHowever, rather than taking a list of arguments "),t("code",[a._v("func(a = 1, b = 2, c = 3)")]),a._v(" they either take an object or nothing: "),t("code",[a._v("func({a: 1, b: 2, c: 3})")]),a._v(". I do this so I don't have to manually write interfaces for every combination possible. Good luck understanding the code below!")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('data.setCallbackBoolean("isBurning", ()->{return isBurning();});\ndata.setCallbackBoolean("isPushedByWater", ()->{return isPushedByWater();});\ndata.setCallbackBoolean("isEating", ()->{return isEating();});\ndata.setCallbackBoolean("isEntityAlive", ()->{return isEntityAlive();});\ndata.setCallbackBoolean("isEntityInsideOpaqueBlock", ()->{return isEntityInsideOpaqueBlock();});\ndata.setCallbackBoolean("isImmuneToExplosions", ()->{return isImmuneToExplosions();});\ndata.setCallbackBoolean("isImmuneToFire", ()->{return isImmuneToFire();});\ndata.setCallbackBoolean("isInLava", ()->{return isInLava();});\ndata.setCallbackBooleanWithDataArg("isInRangeToRender3d", (BaseData params)->{return isInRangeToRender3d(params.getDouble("x"), params.getDouble("y"), params.getDouble("z"));});\ndata.setCallbackBooleanWithDataArg("isInRangeToRenderDist", (BaseData params)->{return isInRangeToRenderDist(params.getDouble("distance"));});\ndata.setCallbackBoolean("isInWater", ()->{return isInWater();});\ndata.setCallbackBoolean("isInvisible", ()->{return isInvisible();});\ndata.setCallbackBoolean("isPushedByWater", ()->{return isPushedByWater();});\ndata.setCallbackBoolean("isRiding", ()->{return isRiding();});\ndata.setCallbackBoolean("isSilent", ()->{return isSilent();});\ndata.setCallbackBoolean("isSneaking", ()->{return isSneaking();});\ndata.setCallbackBoolean("isSprinting", ()->{return isSprinting();});\ndata.setCallbackBoolean("isWet", ()->{return isWet();});\n\ndata.setCallbackVoidWithDataArg("setAir", (BaseData params)->{setAir(params.getInt("air"));});\ndata.setCallbackVoidWithDataArg("setAlwaysRenderNameTag", (BaseData params)->{setAlwaysRenderNameTag(params.getBoolean("alwaysRenderNameTag"));});\ndata.setCallbackVoidWithDataArg("setAngles", (BaseData params)->{setAngles(params.getFloat("yaw"),params.getFloat("pitch"));});\ndata.setCallbackVoid("setBeenAttacked", ()->{setBeenAttacked();});\ndata.setCallbackVoidWithDataArg("setCustomNameTag", (BaseData params)->{setCustomNameTag(params.getString("name"));});\ndata.setCallbackVoid("setDead", ()->{setDead();});\ndata.setCallbackVoidWithDataArg("setEating", (BaseData params)->{setEating(params.getBoolean("eating"));});\ndata.setCallbackVoidWithDataArg("setEntityId", (BaseData params)->{setEntityId(params.getInt("id"));});\ndata.setCallbackVoidWithDataArg("setFire", (BaseData params)->{setFire(params.getInt("seconds"));});\ndata.setCallbackVoidWithDataArg("setFlag", (BaseData params)->{setFlag(params.getInt("flag"), params.getBoolean("set"));});\ndata.setCallbackVoid("setInWeb", ()->{setInWeb();});\ndata.setCallbackVoidWithDataArg("setInvisible", (BaseData params)->{setInvisible(params.getBoolean("invisible"));});\ndata.setCallbackVoidWithDataArg("setLocationAndAngles", (BaseData params)->{setLocationAndAngles(params.getDouble("x"), params.getDouble("y"), params.getDouble("z"), params.getFloat("yaw"), params.getFloat("pitch"));});\ndata.setCallbackVoid("setOnFireFromLava", ()->{setOnFireFromLava();});\ndata.setCallbackVoidWithDataArg("setOutsideBorder", (BaseData params)->{setOutsideBorder(params.getBoolean("outsideBorder"));});\ndata.setCallbackVoidWithDataArg("setPosition", (BaseData params)->{setPosition(params.getDouble("x"), params.getDouble("y"), params.getDouble("z"));});\ndata.setCallbackVoidWithDataArg("setPositionAndRotation", (BaseData params)->{setPositionAndRotation(params.getDouble("x"), params.getDouble("y"), params.getDouble("z"), params.getFloat("yaw"), params.getFloat("pitch"));});\ndata.setCallbackVoidWithDataArg("setPositionAndRotation2", (BaseData params)->{setPositionAndRotation2(params.getDouble("d0"), params.getDouble("d1"), params.getDouble("d2"), params.getFloat("f"), params.getFloat("f1"), params.getInt("var9"), params.getBoolean("var10"));});\ndata.setCallbackVoidWithDataArg("setPositionAndUpdate", (BaseData params)->{setPositionAndUpdate(params.getDouble("d0"), params.getDouble("d1"), params.getDouble("d2"));});\ndata.setCallbackVoidWithDataArg("setRotation", (BaseData params)->{setRotation(params.getFloat("yaw"),params.getFloat("pitch"));});\ndata.setCallbackVoidWithDataArg("setRotationYawHead", (BaseData params)->{setRotationYawHead(params.getFloat("rotation"));});\ndata.setCallbackVoidWithDataArg("setSilent", (BaseData params)->{setSilent(params.getBoolean("isSilent"));});\ndata.setCallbackVoidWithDataArg("setSize", (BaseData params)->{setSize(params.getFloat("f"), params.getFloat("f1"));});\ndata.setCallbackVoidWithDataArg("setSneaking", (BaseData params)->{setSneaking(params.getBoolean("sneaking"));});\ndata.setCallbackVoidWithDataArg("setSprinting", (BaseData params)->{setSprinting(params.getBoolean("flag"));});\ndata.setCallbackVoidWithDataArg("setVelocity", (BaseData params)->{setVelocity(params.getDouble("x"), params.getDouble("y"), params.getDouble("z"));});\n\ndata.setCallbackString("getUUID", ()->{return entityUniqueID.toString();});\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);